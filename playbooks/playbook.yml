- hosts: all

  pre_tasks:
  - name: "install python 2"
    raw: test -e /usr/bin/python ||  (apt -y update && apt install -y python-minimal)

  gather_facts: false
  
  tasks:
  - name: Gather Facts
    setup:

  - name: "test connection"
    ping:
    remote_user: root

  - name: "ensure apache installed"
    apt:
      name: apache2
      state: latest

  - name: Install php
    apt:
      name: php7.0
      state: latest

  - name: Install Mod PHP
    apt: 
      name: libapache2-mod-php7.0
      state: latest

  - name: Install php SQLite3 bindings
    apt:
      name: php7.0-sqlite3
      state: latest
  
  - name: Install sqlite3 command line
    apt: 
      name: sqlite3
      state: latest

  - name: remove default website files
    raw: sudo rm -rf /var/www/html/*.*

  - name: copy over php configuration
    copy:
      src: files/php.ini
      dest: /etc/php/7.0/apache2/php.ini

  - name: copy website over
    copy:
      src: www/
      dest: /var/www/html/
  
  - name: delete database
    file: 
      path: /var/www/html/customers.sqlite3
      state: absent

  - name: copy over database creation script 
    copy: 
      src: files/customers.sql
      dest: /tmp/customers.sql 
    
  - name: create database
    raw: sudo sqlite3 /var/www/html/customers.sqlite3 < /tmp/customers.sql

  - name: set file permissions
    file: 
      path: /var/www/html
      owner: www-data
      recurse: yes
  
  - name: remove tmp script
    raw: sudo rm -rf /tmp/customers.sql
    notify: 
    - reload apache
    - restart apache
    - retrieve webpage
    - check deploy
  
  handlers:
  - name: reload apache
    service: 
      name: apache2
      state: reloaded 
  
  - name: restart apache
    service:
      name: apache2
      state: restarted

  - name: retrieve webpage
    uri:
      url: "http://{{ ansible_hostname }}"
      return_content: yes
    register: webpage
    until: webpage.status == 200
    retries: 20

  - name: check deploy
    fail:
    when: webpage.content_type != "application/json"

      

